const Wrapper = require('./src/wrapper');
const emojify = require('./src/emojify');

class vkTools {
    /**
     * @param token –¢–æ–∫–µ–Ω –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
     * @param userId –ê–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
     * @param messageMode –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–∏ –±–æ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
     */
    constructor({
        token = null,
        userId = null,
        messagesMode = false
    }) {
        this.vkAPI = new Wrapper({
            token: token,
            version: '5.131'
        });
        this.userId = userId;
        this.msgMode = messagesMode;
    }
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç–∞ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
     */
    async configure() {
        if(!this.vkAPI) throw new Error('\u001B[41m ERROR \u001B[0m –ü–∞—Ä–∞–º–µ—Ç—Ä `token` –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!');
        if(!this.userId) throw new Error('\u001B[41m ERROR \u001B[0m –ü–∞—Ä–∞–º–µ—Ç—Ä `userId` –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!');
    };

    /**
     * –í–µ—á–Ω—ã–π –æ–Ω–ª–∞–π–Ω
     */
    async endlessOnline() {
        await this.vkAPI.callMethod('account.setOnline');

        setTimeout(async() => {
            await this.endlessOnline();
            if(this.vkAPI != null && this.userId != null) console.log('\u001B[42m  OK  \u001B[0m –í–µ—á–Ω—ã–π –æ–Ω–ª–∞–π–Ω –æ–±–Ω–æ–≤–ª–µ–Ω!');
            if(this.msgMode == true) this.vkAPI.callMethod('messages.send', { message: `[ OK ] –í–µ—á–Ω—ã–π –æ–Ω–ª–∞–π–Ω –æ–±–Ω–æ–≤–ª–µ–Ω!`, user_id: this.userId, random_id: 0 });
        }, 300000);
    };

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
     * @param {String} text –¢–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ 
     */
    async setStatus(text) {
        if (!text) throw new VToolsError('\u001B[41m ERROR \u001B[0m –¢–µ–∫—Å—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');

        await this.vkAPI.callMethod('status.set', {
            text: text
        });
        if(this.vkAPI != null && this.userId != null) console.log('\u001B[42m  OK  \u001B[0m –°—Ç–∞—Ç—É—Å –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω');
        if(this.msgMode == true) this.vkAPI.callMethod('messages.send', { message: `[ OK ] –°—Ç–∞—Ç—É—Å –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω`, user_id: this.userId, random_id: 0 });
    };

    /**
     * –£–∑–Ω–∞—Ç—å –∫–æ–ª-–≤–æ —Å—Ç–∏–∫–µ—Ä–æ–≤ –∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –¢–æ–∫–µ–Ω VK ME.
     * @param {String} text –ê–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async getStickers(text) {
        if(!text) throw new VToolsError('\u001B[41m ERROR \u001B[0m –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')

        let gifts = await this.vkAPI.callMethod('gifts.getCatalog', {
            user_id: text
        });
        let spisok = gifts.find(x => x.name == "stickers").items.filter(x => Boolean(x.sticker_pack)).filter(x => Boolean(x.disabled)).map(x => ` ${x.sticker_pack.title}`);
        
        if(this.vkAPI != null && this.userId != null) console.log(`\u001B[42m  OK  \u001B[0m –°–ø–∏—Å–æ–∫ –ø–ª–∞—Ç–Ω—ã—Ö –Ω–∞–±–æ—Ä–æ–≤ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (${spisok.length} —à—Ç):${spisok}`)
        if(this.msgMode == true) this.vkAPI.callMethod('messages.send', { message: `[ OK ] –°–ø–∏—Å–æ–∫ –ø–ª–∞—Ç–Ω—ã—Ö –Ω–∞–±–æ—Ä–æ–≤ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (${spisok.length} —à—Ç):${spisok}`, user_id: this.userId, random_id: 0 });
    }

    /**
     * –ê–≤—Ç–æ-—Å—Ç–∞—Ç—É—Å
     * @param {Object} params –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç–∞—Ç—É—Å–∞
     * @param {String} params.lang –Ø–∑—ã–∫ —Å—Ç–∞—Ç—É—Å–∞
     * @param {String} params.language –Ø–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–∏—Ä–æ–≤–∞–Ω–∏—è (—Ç–∏–ø–æ –∫—Ä—É—Ç–æ–π)
     * @param {Number} params.groupId –ï—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, —Ç–æ –∞–≤—Ç–æ—Å—Ç–∞—Ç—É—Å –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É
     * @param {Boolean} params.currentDate –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
     * @param {Boolean} params.currentTime –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
     * @param {Boolean} params.subscribers –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
     * @param {Boolean} params.avatarLikes –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤ –Ω–∞ –∞–≤–∞—Ç–∞—Ä–∫–µ
     */
    async setAutoStatus(params = {}) {
        if (!params.lang) params.lang = 'ru';
        if (params.lang !== 'en' && params.lang !== 'ru') throw new VToolsError("\u001B[41m ERROR \u001B[0m –ü–∞—Ä–∞–º–µ—Ç—Ä `lang` –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ 'ru' –∏–ª–∏ 'en'");

        let text = '';

        if (params.currentDate) {
            let day = emojify(new Date().getDate());
            let month = emojify(new Date().getMonth());
            let year = emojify(new Date().getFullYear());

            text += `üìÜ ${params.lang == 'ru' ? '–î–∞—Ç–∞:' : 'Date:'} ${day}\.${month}\.${year} | `;
        };

        if (params.currentTime) {
            let hours = emojify(new Date().getHours());
            let minutes = emojify(new Date().getMinutes());

            text += `‚è∞ ${params.lang == 'ru' ? '–í—Ä–µ–º—è:' : 'Time:'} ${hours}\:${minutes} | `;
        };

        if (params.groupId) {
            if (params.groupId < 0) params.groupId = -params.groupId;

            let groupInfo = await this.vkAPI.callMethod('groups.getById', {
                group_id: params.groupId,
                fields: 'members_count'
            });

            if (params.subscribers) {
                text += `üë• ${params.lang == 'ru' ? '–ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤:' : 'Subscribers:'} ${groupInfo[0].members_count}`;
            };

            await this.vkAPI.callMethod('status.set', {
                text: encodeURIComponent(text),
                group_id: params.groupId
            });    
        } else {
            let userInfo = await this.vkAPI.callMethod('users.get', {
                fields: 'followers_count,photo_id'
            });

            if (params.avatarLikes) {                
                if (typeof userInfo[0].photo_id === 'undefined') throw new VToolsError(`\u001B[43m WARNING \u001B[0m –£ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–≤–∞—Ç–∞—Ä–∫–∏.`);

                let userPhotoInfo = await this.vkAPI.callMethod('photos.getById', {
                    photos: userInfo[0].photo_id,
                    extended: 1
                });

                text += `üíå ${params.lang == 'ru' ? '–ù–∞ –∞–≤–µ:' : 'On avatar:'} ${userPhotoInfo[0].likes.count} ‚ù§ | `
            };

            if (params.subscribers) {
                text += `üë• ${params.lang == 'ru' ? '–ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤:' : 'Subscribers:'} ${userInfo[0].followers_count} | `;
            };

            if(params.language) {
                text += `–Ø–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è: ${params.lang == 'ru' ? '–ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤' : 'Subscribers'}`
            };

            await this.vkAPI.callMethod('status.set', {
                text: encodeURIComponent(text)
            });
        };

        setTimeout(async () => {
            await this.setAutoStatus(params);
            if(this.vkAPI != null && this.userId != null) console.log('\u001B[42m  OK  \u001B[0m –ê–≤—Ç–æ—Å—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª—ë–Ω!')
            if(this.msgMode == true) this.vkAPI.callMethod('messages.send', { message: `[ OK ] –ê–≤—Ç–æ—Å—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª—ë–Ω!`, user_id: this.userId, random_id: 0 });
        }, 60000);
    };
};

module.exports = { vkTools, Wrapper };